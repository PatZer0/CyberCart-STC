C251 COMPILER V5.60.0,  main                                                               10/04/24  19:01:16  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Out_File\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Project\USER\src\main.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED)
                    - BROWSE INCDIR(Libraries\libraries;Libraries\seekfree_libraries;Libraries\seekfree_peripheral;Project\CODE;Project\USER\
                    -inc;Project\USER\src;Libraries\seekfree_components) DEBUG PRINT(.\Out_File\main.lst) TABS(2) OBJECT(.\Out_File\main.obj)
                    - 

stmt  level    source

    1          // 引脚定义写在文档中，不再使用注释备注
    2          
    3          #include "headfile.h"
    4          #include "laser_ranging.h"
    5          #include "motor_driver_boards.h"     // 电机驱动板头文件
    6          #include "key.h"
    7          // #include "lsm303_sw.h"
    8          
    9          void gpio_init()
   10          {
   11   1          gpio_mode(P6, GPO_PP);          // 配置 P6.0~P6.7 为推挽输出
   12   1          gpio_mode(P1, GPO_PP);          // 配置 P1.0~P1.7 为推挽输出
   13   1      }
   14          
   15          void motor_drivers_pwm_init()
   16          {
   17   1          // 参数：模块_端口, 频率, 占空比(÷10000)
   18   1          pwm_init(PWMA_CH1P_P60, 30000, 1000);   // X方向驱动板PB, 3KHz, 10%占空比
   19   1          pwm_init(PWMA_CH2N_P63, 30000, 1000);   // X方向驱动板PA，3KHz, 10%占空比
   20   1          pwm_init(PWMA_CH3P_P14, 30000, 1000);   // Y方向驱动板PB, 3KHz, 10%占空比
   21   1          pwm_init(PWMA_CH4N_P67, 30000, 1000);   // Y方向驱动板PA, 3KHz, 10%占空比
   22   1      }
   23          
   24          void lsm303_iic_init(void)
   25          {
   26   1          // float acc_x, acc_y, acc_z;
   27   1          // float mag_x, mag_y, mag_z;
   28   1          iic_init(IIC_4, IIC4_SCL_P32, IIC4_SDA_P33, 19);
   29   1          // 需要注意SEEKFREE LIBRARY默认提供的项目文件没有导入iic相关c文件
   30   1          // 需要手动在Keil中添加
   31   1      }
   32          
   33          void laser_ranging_uart_init()
   34          {
   35   1          uart_init(UART_1, UART1_RX_P43, UART1_TX_P44, 9600, TIM_2);
   36   1          uart_init(UART_2, UART2_RX_P46, UART2_TX_P47, 9600, TIM_2);
   37   1      }
   38          
   39          void main()
   40          {   
   41   1        board_init();             // 初始化寄存器,勿删除此句代码。
   42   1          gpio_init();                    // 初始化GPIO，使得P4和P6正确输出
   43   1          oled_init_spi();                // 初始化OLED显示屏
   44   1          oled_p6x8str_spi(0, 0, "LASER RANGING");
   45   1          oled_p6x8str_spi(0, 1, "DIST:");
   46   1          keys_ui_init();                 // 初始化按键UI
   47   1          // lsm303_iic_init();              // 初始化LSM303_IIC接口
   48   1          // lsm303_init_all();              // 初始化LSM303传感器
   49   1          uart_port_init();               // 初始化UART端口
   50   1          uart_initialize(1);             // 初始化UART1
   51   1          uart_initialize(2);             // 初始化UART2
   52   1          motor_drivers_pwm_init();     // 初始化PWM
   53   1          laser_ranging_init();           // 初始化激光测距
   54   1          // laser_ranging_uart_init();      // 初始化激光测距串口
   55   1          laser_ranging('x', &lrcmd_continous);
   56   1          while(1)
C251 COMPILER V5.60.0,  main                                                               10/04/24  19:01:16  PAGE 2   

   57   1          {
   58   2              key1_check();
   59   2              key2_check();
   60   2              key3_check();
   61   2              key4_check();
   62   2              oled_printf_float_spi(5*6, 1, lrdata.x.valuedata, 2, 6);
   63   2              // oled_p6x8str_spi(0, 0, "LSM303 DATA READ TEST");
   64   2              // oled_p6x8str_spi(0, 1, "ACC X:");
   65   2              // oled_p6x8str_spi(0, 2, "ACC Y:");
   66   2              // oled_p6x8str_spi(0, 3, "ACC Z:");
   67   2              // acc_x = lsm303_read_acc('x');
   68   2              // acc_y = lsm303_read_acc('y');
   69   2              // acc_z = lsm303_read_acc('z');
   70   2              // oled_printf_float_spi(6*7, 1, acc_x, 4, 6);
   71   2              // oled_printf_float_spi(6*7, 2, acc_y, 4, 6);
   72   2              // oled_printf_float_spi(6*7, 3, acc_z, 4, 6);
   73   2              // mag_x = lsm303_read_mag('x');
   74   2              // mag_y = lsm303_read_mag('y');
   75   2              // mag_z = lsm303_read_mag('z');
   76   2              // oled_p6x8str_spi(0, 5, "MAG X:");
   77   2              // oled_p6x8str_spi(0, 6, "MAG Y:");
   78   2              // oled_p6x8str_spi(0, 7, "MAG Z:");
   79   2              // oled_printf_float_spi(6*7, 5, mag_x, 4, 6);
   80   2              // oled_printf_float_spi(6*7, 6, mag_y, 4, 6);
   81   2              // oled_printf_float_spi(6*7, 7, mag_z, 4, 6);
   82   2              // delay_ms(100);
   83   2              // wheels_x_forward();
   84   2              // wheels_y_forward();
   85   2              // delay_ms(255);
   86   2              // pwm_duty(PWMA_CH1P_P60, 2000);
   87   2              // pwm_duty(PWMA_CH2P_P62, 2000);
   88   2              // pwm_duty(PWMA_CH3P_P64, 2000);
   89   2              // pwm_duty(PWMA_CH4P_P66, 2000);
   90   2              // delay_ms(255);
   91   2              // wheels_x_backward();
   92   2              // wheels_y_backward();
   93   2              // delay_ms(255);
   94   2              // pwm_duty(PWMA_CH1P_P60, 5000);
   95   2              // pwm_duty(PWMA_CH2P_P62, 5000);
   96   2              // pwm_duty(PWMA_CH3P_P64, 5000);
   97   2              // pwm_duty(PWMA_CH4P_P66, 5000);
   98   2              // delay_ms(255);
   99   2              // wheels_all_stop();
  100   2              // delay_ms(255);
  101   2          }
  102   1      }
  103          
  104          
  105          /********************************************************************************************************
             -*************
  106           * COPYRIGHT NOTICE
  107           * Copyright (c) 2020,逐飞科技
  108           * All rights reserved.
  109           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
  110           *
  111           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
  112           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
  113           *
  114           * @file          main
  115           * @company       成都逐飞科技有限公司
  116           * @author        逐飞科技(QQ790875685)
  117           * @version       查看doc内version文件 版本说明
  118           * @Software    MDK FOR C251 V5.60
  119           * @Target core   STC32G12K128
  120           * @Taobao      https://seekfree.taobao.com/
  121           * @date          2020-12-18
C251 COMPILER V5.60.0,  main                                                               10/04/24  19:01:16  PAGE 3   

  122           ********************************************************************************************************
             -************/


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       284     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        20     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
