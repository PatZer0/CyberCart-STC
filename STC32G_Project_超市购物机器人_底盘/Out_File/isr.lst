C251 COMPILER V5.60.0,  isr                                                                10/04/24  20:06:39  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Project\USER\src\isr.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) 
                    -BROWSE INCDIR(Libraries\libraries;Libraries\seekfree_libraries;Libraries\seekfree_peripheral;Project\CODE;Project\USER\i
                    -nc;Project\USER\src;Libraries\seekfree_components) DEBUG PRINT(.\Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj) 

stmt  level    source

    1          ///******************************************************************************************************
             -***************
    2          // * COPYRIGHT NOTICE
    3          // * Copyright (c) 2020,逐飞科技
    4          // * All rights reserved.
    5          // * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6          // *
    7          // * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8          // * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9          // *
   10          // * @file          isr
   11          // * @company       成都逐飞科技有限公司
   12          // * @author        逐飞科技(QQ790875685)
   13          // * @version       查看doc内version文件 版本说明
   14          // * @Software      MDK FOR C251 V5.60
   15          // * @Target core   STC32G12K128
   16          // * @Taobao        https://seekfree.taobao.com/
   17          // * @date          2020-4-14
   18          // ******************************************************************************************************
             -**************/
   19          #include "headfile.h"
   20          
   21          // #define UART1_BUF_LENGTH 16                        // 定义接收缓冲区长度
   22          // #define UART2_BUF_LENGTH 16                        // 定义接收缓冲区长度
   23          // #define UART3_BUF_LENGTH 16                        // 定义接收缓冲区长度
   24          // #define UART4_BUF_LENGTH 16                        // 定义接收缓冲区长度
   25          
   26          // unsigned char uart1_tx_counter, uart2_tx_counter, uart3_tx_counter, uart4_tx_counter;   // 发送计数
   27          // unsigned char uart1_rx_counter, uart2_rx_counter, uart3_rx_counter, uart4_rx_counter;   // 接收计数
   28          // bit           uart1_tx_busy, uart2_tx_busy, uart3_tx_busy, uart4_tx_busy;               // 发送忙标志
   29          // unsigned char uart1_rx_buffer[UART1_BUF_LENGTH];                                        // 接收缓冲
   30          // unsigned char uart2_rx_buffer[UART2_BUF_LENGTH];                                        // 接收缓冲
   31          // unsigned char uart3_rx_buffer[UART3_BUF_LENGTH];                                        // 接收缓冲
   32          // unsigned char uart4_rx_buffer[UART4_BUF_LENGTH];                                        // 接收缓冲
   33          
   34          //UART1中断
   35          void UART1_Isr() interrupt 4
   36          {
   37   1          uint8 res;
   38   1        static uint8 dwon_count;
   39   1          if(UART1_GET_TX_FLAG)
   40   1          {
   41   2              UART1_CLEAR_TX_FLAG;
   42   2              busy[1] = 0;
   43   2          }
   44   1          if(UART1_GET_RX_FLAG)
   45   1          {
   46   2              UART1_CLEAR_RX_FLAG;
   47   2              res = SBUF;
   48   2          }
   49   1      }
   50          
   51          // //UART2中断
   52          void UART2_Isr() interrupt 8
   53          {
   54   1          if(UART2_GET_TX_FLAG)
   55   1        {
C251 COMPILER V5.60.0,  isr                                                                10/04/24  20:06:39  PAGE 2   

   56   2              UART2_CLEAR_TX_FLAG;
   57   2          busy[2] = 0;
   58   2        }
   59   1          if(UART2_GET_RX_FLAG)
   60   1        {
   61   2              UART2_CLEAR_RX_FLAG;
   62   2          //接收数据寄存器为：S2BUF
   63   2      
   64   2        }
   65   1      }
   66          
   67          
   68          //UART3中断
   69          void UART3_Isr() interrupt 17
   70          {
   71   1          if(UART3_GET_TX_FLAG)
   72   1        {
   73   2              UART3_CLEAR_TX_FLAG;
   74   2          busy[3] = 0;
   75   2        }
   76   1          if(UART3_GET_RX_FLAG)
   77   1        {
   78   2              UART3_CLEAR_RX_FLAG;
   79   2          //接收数据寄存器为：S3BUF
   80   2      
   81   2        }
   82   1      }
   83          
   84          
   85          //UART4中断
   86          void UART4_Isr() interrupt 18
   87          {
   88   1          if(UART4_GET_TX_FLAG)
   89   1        {
   90   2              UART4_CLEAR_TX_FLAG;
   91   2          busy[4] = 0;
   92   2        }
   93   1          if(UART4_GET_RX_FLAG)
   94   1        {
   95   2              UART4_CLEAR_RX_FLAG;
   96   2      
   97   2          //接收数据寄存器为：S4BUF;
   98   2          if(wireless_type == WIRELESS_SI24R1)
   99   2              {
  100   3                  wireless_uart_callback();           //无线转串口回调函数
  101   3              }
  102   2              else if(wireless_type == WIRELESS_CH9141)
  103   2              {
  104   3                  bluetooth_ch9141_uart_callback();   //蓝牙转串口回调函数
  105   3              }
  106   2              else if(wireless_type == WIRELESS_CH573)
  107   2              {
  108   3                  wireless_ch573_callback();          //CH573无线模块回调函数
  109   3              }
  110   2        }
  111   1      }
  112          
  113          // void INT0_Isr() interrupt 0
  114          // {
  115          //  LED = 0;  //点亮LED
  116          // }
  117          // void INT1_Isr() interrupt 2
  118          // {
  119          
  120          // }
  121          // void INT2_Isr() interrupt 10
C251 COMPILER V5.60.0,  isr                                                                10/04/24  20:06:39  PAGE 3   

  122          // {
  123          //  INT2_CLEAR_FLAG;  //清除中断标志
  124          // }
  125          // void INT3_Isr() interrupt 11
  126          // {
  127          //  INT3_CLEAR_FLAG;  //清除中断标志
  128          // }
  129          
  130          // void INT4_Isr() interrupt 16
  131          // {
  132          //  INT4_CLEAR_FLAG;  //清除中断标志
  133          // }
  134          
  135          // void TM0_Isr() interrupt 1
  136          // {
  137          
  138          // }
  139          // void TM1_Isr() interrupt 3
  140          // {
  141          
  142          // }
  143          // void TM2_Isr() interrupt 12
  144          // {
  145          //  TIM2_CLEAR_FLAG;  //清除中断标志
  146            
  147          // }
  148          // void TM3_Isr() interrupt 19
  149          // {
  150          //  TIM3_CLEAR_FLAG; //清除中断标志
  151            
  152          // }
  153          
  154          // void TM4_Isr() interrupt 20
  155          // {
  156          //  TIM4_CLEAR_FLAG; //清除中断标志
  157          //  ccd_collect();   //CCD采集数据
  158          
  159          // }
  160          
  161          // void  INT0_Isr()  interrupt 0;
  162          // void  TM0_Isr()   interrupt 1;
  163          // void  INT1_Isr()  interrupt 2;
  164          // void  TM1_Isr()   interrupt 3;
  165          // void  UART1_Isr() interrupt 4;
  166          // void  ADC_Isr()   interrupt 5;
  167          // void  LVD_Isr()   interrupt 6;
  168          // void  PCA_Isr()   interrupt 7;
  169          // void  UART2_Isr() interrupt 8;
  170          // void  SPI_Isr()   interrupt 9;
  171          // void  INT2_Isr()  interrupt 10;
  172          // void  INT3_Isr()  interrupt 11;
  173          // void  TM2_Isr()   interrupt 12;
  174          // void  INT4_Isr()  interrupt 16;
  175          // void  UART3_Isr() interrupt 17;
  176          // void  UART4_Isr() interrupt 18;
  177          // void  TM3_Isr()   interrupt 19;
  178          // void  TM4_Isr()   interrupt 20;
  179          // void  CMP_Isr()   interrupt 21;
  180          // void  I2C_Isr()   interrupt 24;
  181          // void  USB_Isr()   interrupt 25;
  182          // void  PWM1_Isr()  interrupt 26;
  183          // void  PWM2_Isr()  interrupt 27;


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       223     ------
C251 COMPILER V5.60.0,  isr                                                                10/04/24  20:06:39  PAGE 4   

  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         2     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
