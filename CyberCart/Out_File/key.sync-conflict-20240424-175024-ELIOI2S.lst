C251 COMPILER V5.60.0,  key                                                                23/04/24  19:35:29  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE key
OBJECT MODULE PLACED IN .\Out_File\key.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Project\CODE\key.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROW
                    -SE INCDIR(Libraries\libraries;Libraries\seekfree_libraries;Libraries\seekfree_peripheral;Project\CODE;Project\USER\inc;P
                    -roject\USER\src;Libraries\seekfree_components) DEBUG PRINT(.\Out_File\key.lst) TABS(2) OBJECT(.\Out_File\key.obj) 

stmt  level    source

    1          
    2          #include "key.h"
    3          #include "laser_ranging.h"
    4          #include "qmc5883.h"
    5          
    6          unsigned char key1_up_store = 1; // 按键1状态暂存
    7          unsigned char key2_up_store = 1; // 按键2状态暂存
    8          unsigned char key3_up_store = 1; // 按键3状态暂存
    9          unsigned char key4_up_store = 1; // 按键4状态暂存
   10          bit LaserRanging_State = 0; // 激光测距状态
   11          
   12          void keys_ui_init()
   13          {
   14   1          // 初始化按键
   15   1          oled_p6x8str_spi(0, 7, "[1][2][3][4]");
   16   1      }
   17          
   18          void key1_short_press()
   19          {
   20   1          // 短按键1功能
   21   1          led_1 = !led_1; // 切换
   22   1          P35 = !P35; // 切换
   23   1      }
   24          
   25          void key2_short_press()
   26          {
   27   1          // 短按键2功能
   28   1          pwm_duty(PWMB_CH3_P33, 100);
   29   1      }
   30          
   31          void key3_short_press()
   32          {
   33   1          // 短按键3功能
   34   1          pwm_duty(PWMB_CH3_P33, 0);
   35   1      }
   36          
   37          void key4_short_press()
   38          {
   39   1          // 短按键4功能
   40   1          LaserRanging_State = !LaserRanging_State;
   41   1          if(LaserRanging_State)  // 打开激光测距
   42   1          {
   43   2              oled_p6x8str_spi(6*18, 0, " ON");
   44   2              laser_ranging('x', &lrcmd_continous);                                                            
             -            
   45   2              laser_ranging('y', &lrcmd_continous);
   46   2          }
   47   1          else                    // 关闭激光测距
   48   1          {
   49   2              oled_p6x8str_spi(6*18, 0, "OFF");
   50   2              laser_ranging('x', &lrcmd_laseroff);
   51   2              laser_ranging('y', &lrcmd_laseroff);
   52   2          }
   53   1      }
   54          
   55          void key1_check() 
   56          {
C251 COMPILER V5.60.0,  key                                                                23/04/24  19:35:29  PAGE 2   

   57   1          if(key1 == 0 && key1_up_store == 1)
   58   1          {
   59   2              key1_up_store = 0; // 标记按键被按下
   60   2              oled_p6x8str_spi(0, 7, ">1<");
   61   2          }
   62   1          if(key1 == 1 && key1_up_store == 0)
   63   1          {
   64   2              key1_up_store = 1; // 标记按键被释放
   65   2              key1_short_press(); // 触发短按键1功能
   66   2              oled_p6x8str_spi(0, 7, "[1]");
   67   2          }
   68   1      }
   69          
   70          void key2_check()
   71          {
   72   1          if(key2 == 0 && key2_up_store == 1)
   73   1          {
   74   2              key2_up_store = 0; // 标记按键被按下
   75   2              oled_p6x8str_spi(3*6, 7, ">2<");
   76   2          }
   77   1          if(key2 == 1 && key2_up_store == 0)
   78   1          {
   79   2              key2_up_store = 1; // 标记按键被释放
   80   2              key2_short_press(); // 触发短按键2功能
   81   2              oled_p6x8str_spi(3*6, 7, "[2]");
   82   2          }
   83   1      }
   84          
   85          void key3_check()
   86          {
   87   1          if(key3 == 0 && key3_up_store == 1)
   88   1          {
   89   2              key3_up_store = 0; // 标记按键被按下
   90   2              oled_p6x8str_spi(6*6, 7, ">3<");
   91   2          }
   92   1          if(key3 == 1 && key3_up_store == 0)
   93   1          {
   94   2              key3_up_store = 1; // 标记按键被释放
   95   2              key3_short_press(); // 触发短按键3功能
   96   2              oled_p6x8str_spi(6*6, 7, "[3]");
   97   2          }
   98   1      }
   99          
  100          void key4_check()
  101          {
  102   1          if(key4 == 0 && key4_up_store == 1)
  103   1          {
  104   2              key4_up_store = 0; // 标记按键被按下
  105   2              oled_p6x8str_spi(9*6, 7, ">4<");
  106   2          }
  107   1          if(key4 == 1 && key4_up_store == 0)
  108   1          {
  109   2              key4_up_store = 1; // 标记按键被释放
  110   2              key4_short_press(); // 触发短按键4功能
  111   2              oled_p6x8str_spi(9*6, 7, "[4]");
  112   2          }
  113   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       470     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
C251 COMPILER V5.60.0,  key                                                                23/04/24  19:35:29  PAGE 3   

  xdata-const size     =    ------     ------
  edata size           =         4     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        73     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
