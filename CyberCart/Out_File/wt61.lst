C251 COMPILER V5.60.0,  wt61                                                               02/05/24  17:36:09  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE wt61
OBJECT MODULE PLACED IN .\Out_File\wt61.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Project\HAL\wt61.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROW
                    -SE INCDIR(Libraries\libraries;Libraries\seekfree_libraries;Libraries\seekfree_peripheral;Project\CODE;Project\USER\inc;P
                    -roject\USER\src;Libraries\seekfree_components;.\Project\HAL) DEBUG PRINT(.\Out_File\wt61.lst) TABS(2) OBJECT(.\Out_File\
                    -wt61.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "hal.h"
    3          
    4          #define g 9.8 // 重力加速度
    5          
    6          unsigned char wt61_cmd_set_axis_z_zero    [] = {0xFF, 0xAA, 0x52};
    7          unsigned char wt61_cmd_calibrate_acc      [] = {0xFF, 0xAA, 0x67};
    8          unsigned char wt61_cmd_switch_power       [] = {0xFF, 0xAA, 0x60};
    9          unsigned char wt61_cmd_set_uart_mode      [] = {0xFF, 0xAA, 0x61};
   10          unsigned char wt61_cmd_set_iic_mode       [] = {0xFF, 0xAA, 0x62};
   11          unsigned char wt61_cmd_set_uart_115200    [] = {0xFF, 0xAA, 0x63};
   12          unsigned char wt61_cmd_set_uart_9600      [] = {0xFF, 0xAA, 0x64};
   13          unsigned char wt61_cmd_set_band_265Hz     [] = {0xFF, 0xAA, 0x81};
   14          unsigned char wt61_cmd_set_band_188Hz     [] = {0xFF, 0xAA, 0x82};
   15          unsigned char wt61_cmd_set_band_98Hz      [] = {0xFF, 0xAA, 0x83};
   16          unsigned char wt61_cmd_set_band_42Hz      [] = {0xFF, 0xAA, 0x84};
   17          unsigned char wt61_cmd_set_band_20Hz      [] = {0xFF, 0xAA, 0x85};
   18          unsigned char wt61_cmd_set_band_10Hz      [] = {0xFF, 0xAA, 0x86};
   19          unsigned char wt61_cmd_set_band_5Hz       [] = {0xFF, 0xAA, 0x87};
   20          unsigned char wt61_cmd_set_horizontal     [] = {0xFF, 0xAA, 0x65};
   21          unsigned char wt61_cmd_set_vertical       [] = {0xFF, 0xAA, 0x66};
   22          
   23          bit wt61_oled_disp_flag = 1;
   24          
   25          float acc_x, acc_y, acc_z, temperature;
   26          float gyro_x, gyro_y, gyro_z;
   27          float x_roll, y_pitch, z_yaw;
   28          
   29          void wt61_init(void)
   30          {
   31   1          uart_init(UART_4, UART4_RX_P52, UART4_TX_P53, 115200, TIM_4);
   32   1          delay_ms(100);
   33   1          uart_sendcmd(4, wt61_cmd_calibrate_acc, 3);
   34   1          delay_ms(100);
   35   1          uart_sendcmd(4, wt61_cmd_set_axis_z_zero, 3);
   36   1          delay_ms(100);
   37   1      }
   38          
   39          void wt61_data_parse(const char *buf)
   40          {
   41   1          if(buf[0] == 0x55)
   42   1          {
   43   2              switch (buf[1])
   44   2              {
   45   3                  case 0x51: // 加速度数据解析
   46   3                      acc_x = ((short)(((short)buf[3] << 8) | buf[2])) * 16 * g / 32768 ;
   47   3                      acc_y = ((short)(((short)buf[5] << 8) | buf[4])) * 16 * g / 32768 ;
   48   3                      acc_z = ((short)(((short)buf[7] << 8) | buf[6])) * 16 * g / 32768 ;
   49   3                      temperature = ((buf[9] << 8) | buf[8]) / 32768 * 96.38 +36.53;
   50   3                     if(wt61_oled_disp_flag) oled_printf_float_spi(2*6, 2, x_roll, 3, 2);
   51   3                      break;
   52   3                  case 0x52: // 陀螺仪数据解析
   53   3                      gyro_x = ((short)(((short)buf[3] << 8) | buf[2])) * 2000 / 32768 ;
   54   3                      gyro_y = ((short)(((short)buf[5] << 8) | buf[4])) * 2000 / 32768 ;
   55   3                      gyro_z = ((short)(((short)buf[7] << 8) | buf[6])) * 2000 / 32768 ;
   56   3                     if(wt61_oled_disp_flag) oled_printf_float_spi(2*6, 3, y_pitch, 3, 2);
C251 COMPILER V5.60.0,  wt61                                                               02/05/24  17:36:09  PAGE 2   

   57   3                      break;
   58   3                  case 0x53: // 角度数据解析
   59   3                      x_roll  = ((short)(((short)buf[3] << 8) | buf[2])) * 180 / 32768 ;
   60   3                      y_pitch = ((short)(((short)buf[5] << 8) | buf[4])) * 180 / 32768 ;
   61   3                      z_yaw   = ((short)(((short)buf[7] << 8) | buf[6])) * 180 / 32768 ;
   62   3                     if(wt61_oled_disp_flag) oled_printf_float_spi(2*6, 4, z_yaw, 3, 2);
   63   3                      break;
   64   3                  default:
   65   3                      break;
   66   3              }
   67   2          }
   68   1      }
   69          
   70          void wt61_oled_disp(void)
   71          {
   72   1      }
   73          
   74          void wt61_oled_init()
   75          {
   76   1          oled_p6x8str_spi(0, 2, "X:");
   77   1          oled_p6x8str_spi(0, 3, "Y:");
   78   1          oled_p6x8str_spi(0, 4, "Z:");
   79   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       888     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        92     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       121     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
