C251 COMPILER V5.60.0,  stepper                                                            04/05/24  19:25:53  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE stepper
OBJECT MODULE PLACED IN .\Out_File\stepper.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Project\HAL\stepper.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) B
                    -ROWSE INCDIR(Libraries\libraries;Libraries\seekfree_libraries;Libraries\seekfree_peripheral;Project\CODE;Project\USER\in
                    -c;Project\USER\src;Libraries\seekfree_components;.\Project\HAL) DEBUG PRINT(.\Out_File\stepper.lst) TABS(2) OBJECT(.\Out
                    -_File\stepper.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "hal.h"
    3          #include "STDLIB.H"
    4          
    5          #define STEPPER_FAST_CNT 10
    6          #define STEPPER_FAST_THRES 50
    7          
    8          unsigned int    timer0_counter              = 0;
    9          unsigned int    stepper_pulses_remaining    = 0;
   10          unsigned char   stepper_pulses_counter      = 0;
   11          unsigned int    stepper_steps_remaining     = 0;
   12          unsigned int    stepper_steps_setted        = 0;
   13          
   14          void Timer0_Isr(void) interrupt 1
   15          {
   16   1          unsigned int stepper_timer_period = 10;
   17   1          int stepper_steps_diff = stepper_steps_setted - stepper_steps_remaining;
   18   1          timer0_counter++;
   19   1      
   20   1          // 停止前减速
   21   1          if (stepper_steps_remaining <= STEPPER_FAST_THRES)
   22   1          {
   23   2              stepper_timer_period = (STEPPER_FAST_CNT + STEPPER_FAST_THRES) - stepper_steps_remaining;
   24   2          }
   25   1          // 启动后加速
   26   1          else if (stepper_steps_diff < STEPPER_FAST_THRES)
   27   1          {
   28   2              stepper_timer_period = (STEPPER_FAST_CNT + STEPPER_FAST_THRES) - stepper_steps_diff;
   29   2          }
   30   1          // 正常速度
   31   1          else
   32   1          {
   33   2              stepper_timer_period = STEPPER_FAST_CNT;
   34   2          }
   35   1      
   36   1          if(timer0_counter >= stepper_timer_period)
   37   1          {
   38   2              if(stepper_pulses_remaining > 0)
   39   2              {
   40   3                  stepper_stp = !stepper_stp;
   41   3                  stepper_pulses_remaining--;
   42   3                  stepper_pulses_counter++;
   43   3              }
   44   2              if(stepper_pulses_counter >= 4)
   45   2              {
   46   3                  stepper_pulses_counter = 0;
   47   3                  stepper_steps_remaining--;
   48   3              }
   49   2              timer0_counter = 0;
   50   2          }
   51   1      }
   52          
   53          void Timer0_Init(void)    //0.1毫秒=100微秒@33.1776MHz
   54          {
   55   1        AUXR |= 0x80;     //定时器时钟1T模式
   56   1        TMOD &= 0xF0;     //设置定时器模式
C251 COMPILER V5.60.0,  stepper                                                            04/05/24  19:25:53  PAGE 2   

   57   1        TL0 = 0x0A;       //设置定时初始值
   58   1        TH0 = 0xF3;       //设置定时初始值
   59   1        TF0 = 0;        //清除TF0标志
   60   1        TR0 = 1;        //定时器0开始计时
   61   1        ET0 = 1;        //使能定时器0中断
   62   1      }
   63          
   64          void stepper_init(void)
   65          {
   66   1          stepper_en = 1;
   67   1          Timer0_Init();
   68   1          // pwm_init(PWM_STEPPER_PORT, 1000, 8000);
   69   1      }
   70          
   71          void stepper_oled_init()
   72          {
   73   1          oled_p6x8str_spi(0, 4, "STP");
   74   1      }
   75          
   76          void stepper_oled_update()
   77          {
   78   1          oled_printf_int32_spi(4*6, 4, stepper_steps_remaining, 6);
   79   1      }
   80          
   81          //-------------------------------------------------------------------------------------------------------
             -------------
   82          //  @brief      让步进电机走指定的步数
   83          //  @param      int 带符号整型数
   84          //  @return     void
   85          //  @since      v1.0 by PatZer0 on 2024.04.15
   86          //  *example  stepper_adjust(+100); // 让步进电机向上走100步
   87          //-------------------------------------------------------------------------------------------------------
             -------------
   88          void stepper_adjust(int step)
   89          {
   90   1          if(step > 0)    stepper_dir = 1;
   91   1          else            stepper_dir = 0;
   92   1      
   93   1          stepper_pulses_remaining = abs(step) * 4;
   94   1          stepper_steps_remaining = abs(step);
   95   1          stepper_steps_setted = abs(step);
   96   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       336     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        15     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        33     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
