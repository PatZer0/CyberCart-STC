C251 COMPILER V5.60.0,  host_comm                                                          23/04/24  21:38:07  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE host_comm
OBJECT MODULE PLACED IN .\Out_File\host_comm.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Project\CODE\host_comm.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED
                    -) BROWSE INCDIR(Libraries\libraries;Libraries\seekfree_libraries;Libraries\seekfree_peripheral;Project\CODE;Project\USER
                    -\inc;Project\USER\src;Libraries\seekfree_components) DEBUG PRINT(.\Out_File\host_comm.lst) TABS(2) OBJECT(.\Out_File\hos
                    -t_comm.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "host_comm.h"
    3          #include "uart.h"
    4          #include "qmc5883.h"
    5          #include "key.h"
    6          
    7          #define HOST_COMM_BUFFER_SIZE 64
    8          
    9          bit     sendok = 0;
   10          bit     senderr = 0;
   11          
   12          void host_comm_uart_init(void)
   13          {
   14   1          // 写入寄存器，设置串口1使用TIMER1，波特率921600
   15   1      
   16   1          SCON = 0x50;    //8位数据,可变波特率
   17   1        AUXR |= 0x40;   //定时器时钟1T模式
   18   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
   19   1        TMOD &= 0x0F;   //设置定时器模式
   20   1        TL1 = 0xF7;     //设置定时初始值
   21   1        TH1 = 0xFF;     //设置定时初始值
   22   1        ET1 = 0;      //禁止定时器中断
   23   1        TR1 = 1;      //定时器1开始计时
   24   1        ES = 1;       //使能
   25   1      }
   26          
   27          void host_comm_irqhandler()
   28          {
   29   1          uint8 i;
   30   1          uint8 oled_row;
   31   1          uint8 oled_txt[64];
   32   1      
   33   1          if ((uart1_rx_buffer[0] == 'A') && (uart1_rx_buffer[1] == 'T'))   // 接收到AT命令
   34   1          {
   35   2              led_1 = !led_1;
   36   2              if((uart1_rx_buffer[3] == 'S') && (uart1_rx_buffer[4] == 'Y') && (uart1_rx_buffer[5] == 'S'))
   37   2              {
   38   3                  if(uart1_rx_buffer[7] == '?') // 接收到SYS?命令
   39   3                  {
   40   4                      sendok = 1;
   41   4                  }
   42   3                  else senderr = 1;
   43   3              }
   44   2              else if((uart1_rx_buffer[3] == 'O') && (uart1_rx_buffer[4] == 'L') && (uart1_rx_buffer[5] == 'E')
             - && (uart1_rx_buffer[6] == 'D')) // 接收到OLED命令
   45   2              {
   46   3                  if((uart1_rx_buffer[8] == 'T') && (uart1_rx_buffer[9] == 'X') && (uart1_rx_buffer[10] == 'T')
             -) // 接收到TXT命令
   47   3                  {
   48   4                      // 第13个字节代表写入的行号，第13个字节是"="
   49   4                      oled_row = uart1_rx_buffer[12];
   50   4                      // 从第14个字节开始，写入oled_txt直到uart1_rx_counter
   51   4                      for (i == 0; i < uart1_rx_counter - 13; i++)
   52   4                      {
   53   5                          oled_txt[i] = uart1_rx_buffer[13 + i];
   54   5                      }
C251 COMPILER V5.60.0,  host_comm                                                          23/04/24  21:38:07  PAGE 2   

   55   4                      // 显示oled_txt
   56   4                      oled_p6x8str_spi(0, oled_row, oled_txt);
   57   4                      // 发送OK
   58   4                      sendok = 1;
   59   4                  }
   60   3                  else senderr = 1;
   61   3              }
   62   2              else senderr == 1;
*** WARNING C138 IN LINE 62 OF Project\CODE\host_comm.c: expression with possibly no effect
   63   2              sendok = 1;
   64   2          }
   65   1          else senderr = 1;
   66   1      }
   67          
   68          void host_comm_sender(void)
   69          {
   70   1          if (sendok)
   71   1          {
   72   2              uart_sendstring(1, "OK\r\n");
   73   2              sendok = 0;
   74   2          }
   75   1          if (senderr)
   76   1          {
   77   2              uart_sendstring(1, "ERROR\r\n");
   78   2              senderr = 0;
   79   2          }
   80   1          // 发送QMC5883L数据
   81   1          // if(uart3_rx_rdy)
   82   1          // {
   83   1          //     uart_sendstring(1, qmc5883_char_yaw);
   84   1          //     uart_sendstring(1, "\r\n");
   85   1          //     uart3_rx_rdy = 0;
   86   1          // }
   87   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       345     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        66     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        13     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
